name: ci

on: [push]

jobs:
  build_r:
    runs-on: ubuntu-16.04
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: https://demo.rstudiopm.com/all/__linux__/xenial/latest
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@master
        with:
          r-version: 3.6

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-

      - name: Install system dependencies
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-results
          path: check
  # build_node:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: "12.x"
  #     - run: npm i -g yarn
  #     - run: yarn set version berry
  #     - run: yarn plugin import @yarnpkg/plugin-workspace-tools
  #     - run: yarn config set checksumBehavior ignore
  #     - name: Cache Node.js modules
  #       uses: actions/cache@v1
  #       with:
  #         path: ./.yarn
  #         key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-yarn-
  #     - run: yarn install --immutable
  #       env:
  #         CI: true
  #     - run: yarn build
  #       env:
  #         CI: true
  #     - run: yarn lint
  #       env:
  #         CI: true
  #     # - run: yarn test --ci --coverage --maxWorkers=2
  #     #   env:
  #     #     CI: true
